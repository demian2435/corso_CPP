CORSO NUMERO 13

int main () {} = la base del programma (MAIN) il corpo del progetto (Mario)

3<<1 = shift a sinistra del bit; esempio; 00000011 questo è il 3 binario se shifto a sinistra di 1 verrà fuori 00000110 cioè 6

#include <iostream> = libreria base del IN-OUT-STREAM da Console a CPU e da CPU a console (>> IN - << OUT); # = Pre-processore; <> per chiamare librerie standard; "" per le nostre librerie

std::cout = std sta per standard e cioè la libreria che contiene il comando cout (cioè stampa "console-out", fai uscire dalla cpu)

usig namespace std; = (sotto define) obbliga il pc ad usare la libreria Standard per tutti i comandi che andremo ad utilizzare (SUICIDIO?)

using std::cout; = obbliga il pc ad usare il count con std davanti così da evitare di scriverlo (messo all'interno del MAIN vale solo per il main

boolean = true 1 - false 0

°BUILT-IN (librerie predefinite) (Mario)

TIPI ARITMETICI = INTEGRALI bool (booleano) - char (caratteri) - int (numeri interi); FLOATING POINT float (con la virgola, negativi etc) - double (stessa cosa ma per numeri più grandi); VOID roba matta

PUNTATORI

REFERENCE

ARRAY = elenconomi [rossi,verdi,bianchi] - elenconomi[2] -> verdi

°DEFINITI UTENTE (librerie proprie)

STRUCT (Mario)(Mario)

CLASSI = esempio l'età delle persone dentro un elenco

ENUMERAZIONI = gestire un elenco con dei nomi, tipo il lunedì sarà 1, il martedì il 2 etc.. oppure con i colori RGB..

I linguaggi servono a semplificare il parlare con la macchina, che percepisce solo 0 e 1 (cioè linguaggio binario), si utilizzano linguaggi dove sono stati salvati in precedenza dei comandi in una tabbella dove la macchina quando legge esempio COUT invierà 01001001001110011 alla macchina che stamperà sullo schermo.. scrivere in binario sarebbe il massimo poichè scriveremmo la stesa lingua della macchina ma ciò sarebbe molto difficoltoso quindi ultilizziamo dei linguaggi per semplificarci la vita, ma più sono lontani dalla macchina più lento sarà il processo, l'ASSEMBLY è il primo traduttore inventato, puoi gestire la CPU in maniera perfetta (LINGUAGGIO A BASSO LIVELLO - cioè vicinissimo alla macchina) o usare un linguaggio ad alto livello esempio c++ che tra i linguaggi ad "alto livello" è il più vicino alla macchina e quindi efficente..

RICORDA un INT lunghezza minima sono 16 bit di un LONG 32 bit

0377 numero ottale = 255 (cifra più grande 7 {che in bit si scrive 111}- 0 sta per ottale - 3 sarebbe 8x8+8x8+8x8 - 7 sarebbe 8x7 - 7 sarebbe 7
0xFF numero esadecimale = 255 (cifra più grande 15 {che in bit si scrive 1111}- 0x sta per esadecimale - F sarebbe 15x16 - F sarebbe 15(8,9,A=10,B=11,C=12,D=13,E=14,F=15))
255 numero decimale = 255 (Mario)
0b110000 numero binario = 48

4000U = usa numeri UNSIGNED se sei certo che non userai mani numeri con segni (meno, virgole etc) farà riparmiare tempo sopratutto su cicli lunghi
